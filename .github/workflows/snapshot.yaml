name: Snapshot Frontend

on:
  pull_request:
    branches:
      - main

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: 'true'

      - name: Run lint
        run: pnpm lint

  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: 'true'

      - name: Run tests
        run: pnpm test:run

  Build:
    needs: Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: 'true'

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
          context: .

  Deploy:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Extract PR body for webhook
        uses: NYCU-SDC/Extract-PRbody@V1.0
        id: extract
        with:
          pr_body: ${{ github.event.pull_request.body }}

      - name: Process PR body for webhook
        run: |
          PR_TYPE=$(echo '${{ steps.extract.outputs.type_block }}' | jq -R -s @json)
          PR_PURPOSE=$(echo '${{ steps.extract.outputs.purpose_block }}' | jq -R -s @json)
          echo "PR_TYPE=$PR_TYPE" >> $GITHUB_ENV
          echo "PR_PURPOSE=$PR_PURPOSE" >> $GITHUB_ENV

      - name: Trigger n8n Snapshot Webhook
        run: |
          curl --location --fail-with-body -X POST https://webhook.sdc.nycu.club/webhook/deploy \
            -H "Content-Type: application/json" \
            -H "x-deploy-token: ${{ secrets.N8N_DEPLOY_TOKEN }}" \
            -d '{
              "source": {
                "title": "Sciedu Frontend",
                "repo": "${{ github.repository }}",
                "branch": "${{ github.head_ref || github.ref_name }}",
                "commit": "${{ github.sha }}",
                "pr_number": "${{ github.event.pull_request.number }}",
                "pr_title": "${{ github.event.pull_request.title }}",
                "pr_type": ${{ env.PR_TYPE }},
                "pr_purpose": ${{ env.PR_PURPOSE }}
              },
              "method": "deploy",
              "metadata": {
                "environment": "snapshot",
                "component": "frontend"
              },
              "setup": {
                "inject_secret": {
                  "enable": true,
                  "project": "Sciedu Frontend",
                  "environment": "snapshot",
                  "secrets": [
                    {
                      "path": "/",
                      "secret_name": "OAUTH_PROXY_TOKEN",
                      "env_name": "OAUTH_PROXY_TOKEN"
                    },
                    {
                      "path": "/google-oauth",
                      "secret_name": "CLIENT_ID",
                      "env_name": "GOOGLE_OAUTH_CLIENT_ID"
                    },
                    {
                      "path": "/google-oauth",
                      "secret_name": "CLIENT_SECRET",
                      "env_name": "GOOGLE_OAUTH_CLIENT_SECRET"
                    }
                  ]
                }
              },
              "post": {
                "notify_discord": {
                  "enable": true,
                  "channel": "sciedu-activity"
                },
                "setup_domain": {
                  "enable": true,
                  "title": "Endpoint",
                  "name": "pr-${{ github.event.pull_request.number }}.sciedu.sdc.nycu.club",
                  "value": "default-eng-deploy:internal"
                }
              }
            }'
